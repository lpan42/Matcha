{"ast":null,"code":"var _jsxFileName = \"/Users/lpan/Desktop/Matcha/front/src/components/account/Account.js\";\nimport React, { Fragment, useContext, useEffect } from 'react';\nimport UserContext from '../../contexts/user/userContext';\nimport { EDITACCOUNT } from '../../contexts/types';\n\nconst Account = () => {\n  const userContext = useContext(UserContext);\n  const {\n    user,\n    isEdit,\n    error,\n    success,\n    editAccount\n  } = userContext;\n  const [edit, setEdit] = useState({\n    username: '',\n    email: '',\n    firstname: '',\n    lastname: '',\n    password: '',\n    re_password: ''\n  });\n  useEffect(() => {\n    userContext.loadUser(); //eslint-disable-next-line\n  }, []);\n\n  const onClick = () => {\n    editAccount();\n  };\n\n  const accountInfo = React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Email: \", user && user.data.email), React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Firstname: \", user && user.data.firstname), React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Lastnme: \", user && user.data.lastname), React.createElement(\"button\", {\n    className: \"btn btn-primary btn-block\",\n    onClick: onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Edit\"));\n  const editForm = React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-primary btn-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"comfirm\"));\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, !isEdit ? accountInfo : editForm);\n};\n\nexport default Account;","map":{"version":3,"sources":["/Users/lpan/Desktop/Matcha/front/src/components/account/Account.js"],"names":["React","Fragment","useContext","useEffect","UserContext","EDITACCOUNT","Account","userContext","user","isEdit","error","success","editAccount","edit","setEdit","useState","username","email","firstname","lastname","password","re_password","loadUser","onClick","accountInfo","data","editForm"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,EAAqCC,SAArC,QAAuD,OAAvD;AACA,OAAOC,WAAP,MAAwB,iCAAxB;AACA,SAASC,WAAT,QAA4B,sBAA5B;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAClB,QAAMC,WAAW,GAAGL,UAAU,CAACE,WAAD,CAA9B;AACA,QAAM;AAAEI,IAAAA,IAAF;AAAQC,IAAAA,MAAR;AAAgBC,IAAAA,KAAhB;AAAuBC,IAAAA,OAAvB;AAAgCC,IAAAA;AAAhC,MAAgDL,WAAtD;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBC,QAAQ,CAAC;AAC/BC,IAAAA,QAAQ,EAAE,EADqB;AAE/BC,IAAAA,KAAK,EAAE,EAFwB;AAG/BC,IAAAA,SAAS,EAAE,EAHoB;AAI/BC,IAAAA,QAAQ,EAAE,EAJqB;AAK/BC,IAAAA,QAAQ,EAAE,EALqB;AAM/BC,IAAAA,WAAW,EAAC;AANmB,GAAD,CAAhC;AAQFlB,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,WAAW,CAACe,QAAZ,GADc,CAEd;AACD,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMC,OAAO,GAAG,MAAM;AAClBX,IAAAA,WAAW;AACd,GAFD;;AAIA,QAAMY,WAAW,GACf,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACM;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA4BhB,IAAI,IAAIA,IAAI,CAACiB,IAAL,CAAUR,KAA9C,CADN,EAEM;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAgCT,IAAI,IAAIA,IAAI,CAACiB,IAAL,CAAUP,SAAlD,CAFN,EAGM;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA8BV,IAAI,IAAIA,IAAI,CAACiB,IAAL,CAAUN,QAAhD,CAHN,EAIM;AAAQ,IAAA,SAAS,EAAC,2BAAlB;AAA8C,IAAA,OAAO,EAAEI,OAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJN,CADF;AASF,QAAMG,QAAQ,GACZ,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,SAAS,EAAC,2BAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,CADF;AAME,SACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,CAACjB,MAAD,GAAUe,WAAV,GAAwBE,QAD5B,CADJ;AAKD,CAxCD;;AA0CA,eAAepB,OAAf","sourcesContent":["import React,{ Fragment, useContext, useEffect }  from 'react'\nimport UserContext from '../../contexts/user/userContext';\nimport { EDITACCOUNT } from '../../contexts/types';\n\nconst Account = () => {\n    const userContext = useContext(UserContext);\n    const { user, isEdit, error, success, editAccount } = userContext;\n    const [edit, setEdit] = useState({\n      username: '',\n      email: '',\n      firstname: '',\n      lastname: '',\n      password: '',\n      re_password:''\n  })\n  useEffect(() => {\n    userContext.loadUser();\n    //eslint-disable-next-line\n  }, []);\n\n  const onClick = () => {\n      editAccount();\n  }\n\n  const accountInfo = (\n    <Fragment>\n          <p className=\"lead\">Email: {user && user.data.email}</p> \n          <p className=\"lead\">Firstname: {user && user.data.firstname}</p> \n          <p className=\"lead\">Lastnme: {user && user.data.lastname}</p>\n          <button className=\"btn btn-primary btn-block\" onClick={onClick}>Edit</button>\n    </Fragment>\n)\n\nconst editForm = (\n  <Fragment>\n      <button className=\"btn btn-primary btn-block\" >comfirm</button>\n       \n  </Fragment>\n)\n  return (\n      <div className='container'>\n        { !isEdit ? accountInfo : editForm}\n      </div>\n  )\n}\n\nexport default Account\n"]},"metadata":{},"sourceType":"module"}