{"ast":null,"code":"var _jsxFileName = \"/Users/lpan/Desktop/Matcha/front/src/contexts/profile/ProfileState.js\";\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport ProfileContext from './profileContext';\nimport ProfileReducer from './profileReducer';\nimport setAuthToken from '../../utils/setAuthToken';\nimport { GETPROFILE } from '../types';\n\nconst ProfileState = props => {\n  const initialState = {\n    token: localStorage.getItem('token'),\n    profile: null,\n    loading: true,\n    error: null,\n    success: null\n  };\n  const [state, dispatch] = useReducer(ProfileReducer, initialState);\n\n  const getProfile = async userid => {\n    setAuthToken(localStorage.token);\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const result = await axios.post(`/user/profile/${userid}`, formData, config);\n      dispatch({\n        type: EDIT_ACCOUNT_SUCCESS,\n        payload: result.data.success\n      });\n      loadUser();\n    } catch (err) {\n      dispatch({\n        type: EDIT_ACCOUNT_FAIL,\n        payload: err.response.data.error\n      });\n    }\n  };\n\n  return React.createElement(ProfileContext.Provider, {\n    value: {\n      token: state.token,\n      loading: state.loading,\n      profile: state.user,\n      error: state.error,\n      success: state.success\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default ProfileState;","map":{"version":3,"sources":["/Users/lpan/Desktop/Matcha/front/src/contexts/profile/ProfileState.js"],"names":["React","useReducer","axios","ProfileContext","ProfileReducer","setAuthToken","GETPROFILE","ProfileState","props","initialState","token","localStorage","getItem","profile","loading","error","success","state","dispatch","getProfile","userid","config","headers","result","post","formData","type","EDIT_ACCOUNT_SUCCESS","payload","data","loadUser","err","EDIT_ACCOUNT_FAIL","response","user","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AAEA,SACIC,UADJ,QAEO,UAFP;;AAIA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAC1B,QAAMC,YAAY,GAAG;AACjBC,IAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADU;AAEjBC,IAAAA,OAAO,EAAE,IAFQ;AAGjBC,IAAAA,OAAO,EAAE,IAHQ;AAIjBC,IAAAA,KAAK,EAAE,IAJU;AAKjBC,IAAAA,OAAO,EAAE;AALQ,GAArB;AAQA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBjB,UAAU,CAACG,cAAD,EAAiBK,YAAjB,CAApC;;AAEA,QAAMU,UAAU,GAAG,MAAOC,MAAP,IAAkB;AACjCf,IAAAA,YAAY,CAACM,YAAY,CAACD,KAAd,CAAZ;AACA,UAAMW,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AADE,KAAf;;AAKA,QAAG;AACC,YAAMC,MAAM,GAAI,MAAMrB,KAAK,CAACsB,IAAN,CAAY,iBAAgBJ,MAAO,EAAnC,EAAsCK,QAAtC,EAAgDJ,MAAhD,CAAtB;AACAH,MAAAA,QAAQ,CAAC;AACLQ,QAAAA,IAAI,EAAEC,oBADD;AAELC,QAAAA,OAAO,EAAEL,MAAM,CAACM,IAAP,CAAYb;AAFhB,OAAD,CAAR;AAIAc,MAAAA,QAAQ;AACX,KAPD,CAOC,OAAMC,GAAN,EAAU;AACPb,MAAAA,QAAQ,CAAC;AACLQ,QAAAA,IAAI,EAAEM,iBADD;AAELJ,QAAAA,OAAO,EAAEG,GAAG,CAACE,QAAJ,CAAaJ,IAAb,CAAkBd;AAFtB,OAAD,CAAR;AAIH;AACJ,GApBD;;AAqBA,SACI,oBAAC,cAAD,CAAgB,QAAhB;AACI,IAAA,KAAK,EAAE;AACHL,MAAAA,KAAK,EAAEO,KAAK,CAACP,KADV;AAEHI,MAAAA,OAAO,EAAEG,KAAK,CAACH,OAFZ;AAGHD,MAAAA,OAAO,EAAEI,KAAK,CAACiB,IAHZ;AAIHnB,MAAAA,KAAK,EAAEE,KAAK,CAACF,KAJV;AAKHC,MAAAA,OAAO,EAAEC,KAAK,CAACD;AALZ,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUCR,KAAK,CAAC2B,QAVP,CADJ;AAcH,CA9CD;;AA+CA,eAAe5B,YAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport ProfileContext from './profileContext';\nimport ProfileReducer from './profileReducer';\nimport setAuthToken from '../../utils/setAuthToken';\n\nimport {\n    GETPROFILE\n} from '../types';\n\nconst ProfileState = props => {\n    const initialState = {\n        token: localStorage.getItem('token'),\n        profile: null,\n        loading: true,\n        error: null,\n        success: null,\n    }\n\n    const [state, dispatch] = useReducer(ProfileReducer, initialState);\n\n    const getProfile = async (userid) => {\n        setAuthToken(localStorage.token);\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n        try{\n            const result =  await axios.post(`/user/profile/${userid}`, formData, config);\n            dispatch({\n                type: EDIT_ACCOUNT_SUCCESS,\n                payload: result.data.success\n            });\n            loadUser();\n        }catch(err){\n            dispatch({\n                type: EDIT_ACCOUNT_FAIL,\n                payload: err.response.data.error\n            });\n        }\n    }\n    return (\n        <ProfileContext.Provider\n            value={{\n                token: state.token,\n                loading: state.loading,\n                profile: state.user,\n                error: state.error,\n                success: state.success,\n               \n            }}\n        >\n        {props.children}\n        </ProfileContext.Provider>\n    )\n}\nexport default ProfileState;"]},"metadata":{},"sourceType":"module"}