{"ast":null,"code":"var _jsxFileName = \"/Users/lpan/Desktop/Matcha/front/src/components/account/Account.js\";\nimport React, { Fragment, useState, useContext, useEffect } from 'react';\nimport UserContext from '../../contexts/user/userContext';\nimport { EDITACCOUNT } from '../../contexts/types';\n\nconst Account = () => {\n  const userContext = useContext(UserContext);\n  const {\n    user,\n    error,\n    success,\n    editAccount\n  } = userContext;\n  const [edit, setEdit] = useState(false);\n  useEffect(() => {\n    userContext.loadUser(); //eslint-disable-next-line\n  }, []);\n\n  const onClick = () => {\n    setEdit(true);\n  };\n\n  const accountInfo = React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Email:\"), \" \", React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, user && user.data.email), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Firstname:\"), \" \", React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, user && user.data.firstname), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Lastnme:\"), \" \", React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, user && user.data.lastname), React.createElement(\"button\", {\n    className: \"btn btn-primary btn-block\",\n    onClick: onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Edit\")));\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (email === '' || firstname === '' || lastname === '') {\n      setAlert('All the fields need to be filled', 'danger');\n    }\n  };\n\n  const editForm = React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Email: \"), React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    placeholder: user && user.data.email,\n    onChange: e => user.data.email = e.target.value.toLowerCase(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"firstname\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Firstname: \"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"firstname\",\n    placeholder: user && user.data.firstname,\n    onChange: e => user.data.firstname = e.target.value.toLowerCase(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"lastname\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Lastname: \"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"lastname\",\n    placeholder: user && user.data.lastname,\n    onChange: e => user.data.lastname = e.target.value.toLowerCase(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Comfirm\",\n    className: \"btn btn-primary btn-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })));\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, !edit ? accountInfo : editForm);\n};\n\nexport default Account;","map":{"version":3,"sources":["/Users/lpan/Desktop/Matcha/front/src/components/account/Account.js"],"names":["React","Fragment","useState","useContext","useEffect","UserContext","EDITACCOUNT","Account","userContext","user","error","success","editAccount","edit","setEdit","loadUser","onClick","accountInfo","data","email","firstname","lastname","onSubmit","e","preventDefault","setAlert","editForm","target","value","toLowerCase"],"mappings":"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","sourcesContent":["import React,{ Fragment, useState, useContext, useEffect }  from 'react';\nimport UserContext from '../../contexts/user/userContext';\nimport { EDITACCOUNT } from '../../contexts/types';\n\nconst Account = () => {\n  const userContext = useContext(UserContext);\n  const { user, error, success, editAccount } = userContext;\n\n  const [edit, setEdit] = useState(false);\n\n  useEffect(() => {\n    userContext.loadUser();\n    //eslint-disable-next-line\n  }, []);\n\n  const onClick = () => {\n      setEdit(true);\n  }\n\n  const accountInfo = (\n    <Fragment>\n      <div className=\"form-group\"> \n          <p>Email:</p> <p>{user && user.data.email}</p> \n          <p>Firstname:</p> <p>{user && user.data.firstname}</p> \n          <p>Lastnme:</p> <p>{user && user.data.lastname}</p>\n\n          <button className=\"btn btn-primary btn-block\" onClick={onClick}>Edit</button>\n      </div>\n         \n    </Fragment>\n  )\n\n  const onSubmit =(e) => {\n    e.preventDefault();\n    if(email === '' || firstname === '' || lastname === ''){\n\t\tsetAlert('All the fields need to be filled', 'danger');\n\t}\n  }\n\nconst editForm = (\n  <Fragment>\n      <form onSubmit={onSubmit}>\n          <div className=\"form-group\">\n              <label htmlFor=\"email\">Email: </label>\n\t\t\t  <input type='email' name='email' \n\t\t\t\tplaceholder={user && user.data.email} \n\t\t\t\tonChange={e => user.data.email = e.target.value.toLowerCase()} />\n          </div>\n          <div className=\"form-group\">\n              <label htmlFor=\"firstname\">Firstname: </label>\n\t\t\t  <input type='text' name='firstname'\n\t\t\t\tplaceholder={user && user.data.firstname}\n\t\t\t\tonChange={e => user.data.firstname = e.target.value.toLowerCase()} />\n          </div>\n          <div className=\"form-group\">\n              <label htmlFor=\"lastname\">Lastname: </label>\n\t\t\t  <input type='text' name='lastname'\n\t\t\t  \tplaceholder={user && user.data.lastname} \n\t\t\t  \tonChange={e => user.data.lastname = e.target.value.toLowerCase()} />\n          </div>\n          <input type=\"submit\" value=\"Comfirm\" className=\"btn btn-primary btn-block\" />\n      </form>\n       \n  </Fragment>\n)\n  return (\n      <div className='container'>\n        { !edit ? accountInfo : editForm}\n      </div>\n  )\n}\n\nexport default Account\n"]},"metadata":{},"sourceType":"module"}