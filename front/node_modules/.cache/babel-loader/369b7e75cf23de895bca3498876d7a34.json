{"ast":null,"code":"var _jsxFileName = \"/Users/lpan/Desktop/Matcha/front/src/contexts/profile/ProfileState.js\";\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport ProfileContext from './profileContext';\nimport ProfileReducer from './profileReducer';\nimport setAuthToken from '../../utils/setAuthToken';\nimport { GET_PROFILE, GET_PROFILE_NO, CLEAR_MESSAGE, GET_INTERESTS_LIST, NORMAL_ERROR } from '../types';\n\nconst ProfileState = props => {\n  const initialState = {\n    profile: null,\n    emptyProfile: null,\n    loading: true,\n    error: null,\n    success: null\n  };\n  const [state, dispatch] = useReducer(ProfileReducer, initialState);\n\n  const getProfile = async userid => {\n    setAuthToken(localStorage.token);\n\n    try {\n      const result = await axios.get(`/user/profile/${userid}`);\n      dispatch({\n        type: GET_PROFILE,\n        payload: result.data\n      });\n    } catch (err) {\n      dispatch({\n        type: GET_PROFILE_NO,\n        payload: err.response.data.error\n      });\n    }\n  };\n\n  const getInterestsList = async () => {\n    try {} catch (err) {\n      dispatch({\n        type: NORMAL_ERROR,\n        payload: err.response.data.error\n      });\n    }\n  };\n\n  const clearMessage = () => {\n    dispatch({\n      type: CLEAR_MESSAGE\n    });\n  };\n\n  return React.createElement(ProfileContext.Provider, {\n    value: {\n      profile: state.profile,\n      emptyProfile: state.emptyProfile,\n      loading: state.loading,\n      error: state.error,\n      success: state.success,\n      getProfile,\n      clearMessage\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default ProfileState;","map":{"version":3,"sources":["/Users/lpan/Desktop/Matcha/front/src/contexts/profile/ProfileState.js"],"names":["React","useReducer","axios","ProfileContext","ProfileReducer","setAuthToken","GET_PROFILE","GET_PROFILE_NO","CLEAR_MESSAGE","GET_INTERESTS_LIST","NORMAL_ERROR","ProfileState","props","initialState","profile","emptyProfile","loading","error","success","state","dispatch","getProfile","userid","localStorage","token","result","get","type","payload","data","err","response","getInterestsList","clearMessage","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AAEA,SACIC,WADJ,EACiBC,cADjB,EACiCC,aADjC,EACgDC,kBADhD,EACmEC,YADnE,QAEO,UAFP;;AAIA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAC1B,QAAMC,YAAY,GAAG;AACjBC,IAAAA,OAAO,EAAE,IADQ;AAEjBC,IAAAA,YAAY,EAAE,IAFG;AAGjBC,IAAAA,OAAO,EAAE,IAHQ;AAIjBC,IAAAA,KAAK,EAAE,IAJU;AAKjBC,IAAAA,OAAO,EAAE;AALQ,GAArB;AAQA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBnB,UAAU,CAACG,cAAD,EAAiBS,YAAjB,CAApC;;AAEA,QAAMQ,UAAU,GAAG,MAAOC,MAAP,IAAkB;AACjCjB,IAAAA,YAAY,CAACkB,YAAY,CAACC,KAAd,CAAZ;;AACA,QAAG;AACC,YAAMC,MAAM,GAAI,MAAMvB,KAAK,CAACwB,GAAN,CAAW,iBAAgBJ,MAAO,EAAlC,CAAtB;AACAF,MAAAA,QAAQ,CAAC;AACLO,QAAAA,IAAI,EAAErB,WADD;AAELsB,QAAAA,OAAO,EAAEH,MAAM,CAACI;AAFX,OAAD,CAAR;AAIH,KAND,CAMC,OAAMC,GAAN,EAAU;AACPV,MAAAA,QAAQ,CAAC;AACLO,QAAAA,IAAI,EAAEpB,cADD;AAELqB,QAAAA,OAAO,EAAEE,GAAG,CAACC,QAAJ,CAAaF,IAAb,CAAkBZ;AAFtB,OAAD,CAAR;AAIH;AACJ,GAdD;;AAgBA,QAAMe,gBAAgB,GAAG,YAAY;AACjC,QAAG,CAEF,CAFD,CAGA,OAAMF,GAAN,EAAU;AACNV,MAAAA,QAAQ,CAAC;AACLO,QAAAA,IAAI,EAAEjB,YADD;AAELkB,QAAAA,OAAO,EAAEE,GAAG,CAACC,QAAJ,CAAaF,IAAb,CAAkBZ;AAFtB,OAAD,CAAR;AAIH;AACJ,GAVD;;AAYA,QAAMgB,YAAY,GAAG,MAAM;AACvBb,IAAAA,QAAQ,CAAC;AACLO,MAAAA,IAAI,EAAEnB;AADD,KAAD,CAAR;AAGH,GAJD;;AAMA,SACI,oBAAC,cAAD,CAAgB,QAAhB;AACI,IAAA,KAAK,EAAE;AACHM,MAAAA,OAAO,EAAEK,KAAK,CAACL,OADZ;AAEHC,MAAAA,YAAY,EAAEI,KAAK,CAACJ,YAFjB;AAGHC,MAAAA,OAAO,EAAEG,KAAK,CAACH,OAHZ;AAIHC,MAAAA,KAAK,EAAEE,KAAK,CAACF,KAJV;AAKHC,MAAAA,OAAO,EAAEC,KAAK,CAACD,OALZ;AAMHG,MAAAA,UANG;AAOHY,MAAAA;AAPG,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWCrB,KAAK,CAACsB,QAXP,CADJ;AAeH,CA5DD;;AA6DA,eAAevB,YAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport ProfileContext from './profileContext';\nimport ProfileReducer from './profileReducer';\nimport setAuthToken from '../../utils/setAuthToken';\n\nimport {\n    GET_PROFILE, GET_PROFILE_NO, CLEAR_MESSAGE, GET_INTERESTS_LIST,NORMAL_ERROR\n} from '../types';\n\nconst ProfileState = props => {\n    const initialState = {\n        profile: null,\n        emptyProfile: null,\n        loading: true,\n        error: null,\n        success: null\n    }\n\n    const [state, dispatch] = useReducer(ProfileReducer, initialState);\n\n    const getProfile = async (userid) => {\n        setAuthToken(localStorage.token);\n        try{\n            const result =  await axios.get(`/user/profile/${userid}`);\n            dispatch({\n                type: GET_PROFILE,\n                payload: result.data\n            });\n        }catch(err){\n            dispatch({\n                type: GET_PROFILE_NO,\n                payload: err.response.data.error\n            });\n        }\n    }\n\n    const getInterestsList = async () => {\n        try{\n\n        }\n        catch(err){\n            dispatch({\n                type: NORMAL_ERROR,\n                payload: err.response.data.error\n            });\n        }\n    }\n\n    const clearMessage = () => {\n        dispatch({\n            type: CLEAR_MESSAGE\n        })\n    }\n    \n    return (\n        <ProfileContext.Provider\n            value={{\n                profile: state.profile,\n                emptyProfile: state.emptyProfile,\n                loading: state.loading,\n                error: state.error,\n                success: state.success,\n                getProfile,\n                clearMessage\n            }}\n        >\n        {props.children}\n        </ProfileContext.Provider>\n    )\n}\nexport default ProfileState;"]},"metadata":{},"sourceType":"module"}