{"ast":null,"code":"var _jsxFileName = \"/Users/lpan/Desktop/Matcha/front/src/contexts/alert/AlertState.js\";\n//fetch action, request \nimport React, { useReducer } from 'react';\nimport AlertContext from './alertContext';\nimport AlertReducer from './alertReducer';\nimport { SET_ALERT, REMOVE_ALERT } from '../types';\n\nconst AlertState = props => {\n  const initialState = null;\n  const [state, dispatch] = useReducer(AlertReducer, initialState);\n\n  const setAlert = (msg, type) => {\n    dispatch({\n      type: SET_ALERT,\n      payload: {\n        msg,\n        type\n      }\n    });\n    setTimeout(() => dispatch({\n      type: REMOVE_ALERT\n    }), 3000);\n  }; //making it available for entire app\n\n\n  return React.createElement(AlertContext.Provider, {\n    value: {\n      alert: state,\n      setAlert\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default AlertState;","map":{"version":3,"sources":["/Users/lpan/Desktop/Matcha/front/src/contexts/alert/AlertState.js"],"names":["React","useReducer","AlertContext","AlertReducer","SET_ALERT","REMOVE_ALERT","AlertState","props","initialState","state","dispatch","setAlert","msg","type","payload","setTimeout","alert","children"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SACIC,SADJ,EAEIC,YAFJ,QAGO,UAHP;;AAKA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AACxB,QAAMC,YAAY,GAAG,IAArB;AAEA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,UAAU,CAACE,YAAD,EAAeK,YAAf,CAApC;;AAEH,QAAMG,QAAQ,GAAG,CAACC,GAAD,EAAMC,IAAN,KAAe;AAC/BH,IAAAA,QAAQ,CAAC;AACCG,MAAAA,IAAI,EAAET,SADP;AAECU,MAAAA,OAAO,EAAE;AAACF,QAAAA,GAAD;AAAMC,QAAAA;AAAN;AAFV,KAAD,CAAR;AAIAE,IAAAA,UAAU,CAAC,MAAML,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAER;AAAR,KAAD,CAAf,EAAyC,IAAzC,CAAV;AACA,GAND,CAL2B,CAavB;;;AACD,SAAO,oBAAC,YAAD,CAAc,QAAd;AACT,IAAA,KAAK,EAAE;AACNW,MAAAA,KAAK,EAAEP,KADD;AAENE,MAAAA;AAFM,KADE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMHJ,KAAK,CAACU,QANH,CAAP;AAQH,CAtBD;;AAwBA,eAAeX,UAAf","sourcesContent":["//fetch action, request \nimport React, { useReducer } from 'react';\nimport AlertContext from './alertContext';\nimport AlertReducer from './alertReducer';\nimport {\n    SET_ALERT,\n    REMOVE_ALERT\n} from '../types';\n\nconst AlertState = props => {\n    const initialState = null;\n\n    const [state, dispatch] = useReducer(AlertReducer, initialState);\n\n\tconst setAlert = (msg, type) => {\n\t\tdispatch({\n            type: SET_ALERT,\n            payload: {msg, type}\n        });\n\t\tsetTimeout(() => dispatch({ type: REMOVE_ALERT }), 3000);\n\t}\n\n     //making it available for entire app\n    return <AlertContext.Provider\n\t\tvalue={{\n\t\t\talert: state,\n\t\t\tsetAlert\n\t\t}}\n\t>\n       {props.children}\n    </AlertContext.Provider>\n}\n\nexport default AlertState;\n"]},"metadata":{},"sourceType":"module"}