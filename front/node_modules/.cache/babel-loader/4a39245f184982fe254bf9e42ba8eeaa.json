{"ast":null,"code":"var _jsxFileName = \"/Users/lpan/Desktop/Matcha/front/src/components/profile/Profile.js\";\nimport React, { Fragment, useContext, useEffect } from 'react';\nimport AlertContext from '../../contexts/alert/alertContext';\nimport UserContext from '../../contexts/user/userContext';\nimport ProfileContext from '../../contexts/profile/profileContext';\n\nconst Profile = match => {\n  const profileContext = useContext(ProfileContext);\n  const alertContext = useContext(AlertContext);\n  const userContext = useContext(UserContext);\n  const {\n    getProfile\n  } = profileContext;\n  const {\n    setAlert\n  } = alertContext;\n  const {\n    loadUser,\n    user,\n    clearMessage,\n    error,\n    success\n  } = userContext;\n  useEffect(() => {\n    loadUser(); // getProfile(match.params.id);\n\n    if (error) {\n      setAlert(error, 'danger');\n      clearMessage();\n    }\n\n    if (success) {\n      setAlert(success, 'success');\n      clearMessage();\n    } // eslint-disable-next-line\n\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"profile\");\n};\n\nexport default Profile;","map":{"version":3,"sources":["/Users/lpan/Desktop/Matcha/front/src/components/profile/Profile.js"],"names":["React","Fragment","useContext","useEffect","AlertContext","UserContext","ProfileContext","Profile","match","profileContext","alertContext","userContext","getProfile","setAlert","loadUser","user","clearMessage","error","success"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAOC,YAAP,MAAyB,mCAAzB;AACA,OAAOC,WAAP,MAAwB,iCAAxB;AACA,OAAOC,cAAP,MAA2B,uCAA3B;;AAEA,MAAMC,OAAO,GAAKC,KAAF,IAAa;AACzB,QAAOC,cAAc,GAAGP,UAAU,CAACI,cAAD,CAAlC;AACA,QAAOI,YAAY,GAAGR,UAAU,CAACE,YAAD,CAAhC;AACA,QAAOO,WAAW,GAAGT,UAAU,CAACG,WAAD,CAA/B;AAEA,QAAM;AAAEO,IAAAA;AAAF,MAAiBH,cAAvB;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAeH,YAArB;AACA,QAAM;AAAEI,IAAAA,QAAF;AAAYC,IAAAA,IAAZ;AAAkBC,IAAAA,YAAlB;AAAgCC,IAAAA,KAAhC;AAAsCC,IAAAA;AAAtC,MAAkDP,WAAxD;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,QAAQ,GADI,CAEZ;;AACA,QAAGG,KAAH,EAAU;AACNJ,MAAAA,QAAQ,CAACI,KAAD,EAAQ,QAAR,CAAR;AACAD,MAAAA,YAAY;AACf;;AACD,QAAGE,OAAH,EAAY;AACZL,MAAAA,QAAQ,CAACK,OAAD,EAAU,SAAV,CAAR;AACAF,MAAAA,YAAY;AACX,KAVW,CAWZ;;AACH,GAZQ,EAYN,EAZM,CAAT;AAcA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ;AAKH,CA5BD;;AA8BA,eAAeT,OAAf","sourcesContent":["import React, { Fragment, useContext, useEffect } from 'react'\nimport AlertContext from '../../contexts/alert/alertContext';\nimport UserContext from '../../contexts/user/userContext';\nimport ProfileContext from '../../contexts/profile/profileContext';\n\nconst Profile = ( match ) => {\n    const  profileContext = useContext(ProfileContext);\n    const  alertContext = useContext(AlertContext);\n    const  userContext = useContext(UserContext);\n\n    const { getProfile } = profileContext;\n    const { setAlert } = alertContext;\n    const { loadUser, user, clearMessage ,error,success,} = userContext;\n\n    useEffect(() => {\n        loadUser();\n        // getProfile(match.params.id);\n        if(error) {\n            setAlert(error, 'danger');\n            clearMessage();\n        }\n        if(success) {\n        setAlert(success, 'success');\n        clearMessage();\n        }\n        // eslint-disable-next-line\n    }, []);\n\n    return (\n        <div>\n            profile\n        </div>\n    )\n}\n\nexport default Profile\n"]},"metadata":{},"sourceType":"module"}