{"ast":null,"code":"var _jsxFileName = \"/Users/lpan/Desktop/Matcha/front/src/components/auth/Login.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport AlertContext from '../../contexts/alert/alertContext';\nimport AuthContext from '../../contexts/auth/authContext';\n\nconst Login = props => {\n  const alertContext = useContext(AlertContext);\n  const authContext = useContext(AuthContext);\n  const {\n    setAlert\n  } = alertContext;\n  const {\n    login,\n    error,\n    clearMessage,\n    isAuthenticated\n  } = authContext;\n  useEffect(() => {\n    authContext.loadUser();\n\n    if (isAuthenticated) {\n      props.history.push('/'); //redirect\n    }\n\n    if (error) {\n      setAlert(error, 'danger');\n      clearMessage();\n    } //eslint-disable-next-line\n\n  }, [error, isAuthenticated, props.history]);\n  const [user, setUser] = useState({\n    username: '',\n    password: ''\n  });\n  const {\n    username,\n    password\n  } = user;\n\n  const onChange = e => {\n    setUser({ ...user,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (username === '' || password === '') {\n      setAlert('All the fields need to be filled', 'danger');\n    } else {\n      login({\n        username,\n        password\n      });\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"form-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \" Login \")), React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Username: \"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"username\",\n    value: username,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Password: \"), React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Login\",\n    className: \"btn btn-primary btn-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  })), \"Don't have an account? \", React.createElement(Link, {\n    to: \"Register\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Register\"));\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/lpan/Desktop/Matcha/front/src/components/auth/Login.js"],"names":["React","useState","useContext","useEffect","Link","AlertContext","AuthContext","Login","props","alertContext","authContext","setAlert","login","error","clearMessage","isAuthenticated","loadUser","history","push","user","setUser","username","password","onChange","e","target","name","value","onSubmit","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react'\nimport { Link } from 'react-router-dom';\nimport AlertContext from '../../contexts/alert/alertContext';\nimport AuthContext from '../../contexts/auth/authContext';\n\nconst Login = (props) => {\n    const alertContext = useContext(AlertContext);\n    const authContext = useContext(AuthContext);\n\n    const { setAlert } = alertContext;\n    const { login, error, clearMessage, isAuthenticated } = authContext;\n\n    useEffect(() => {\n        authContext.loadUser();\n        if(isAuthenticated){\n            props.history.push('/');//redirect\n        }\n        if(error) {\n            setAlert(error, 'danger');\n            clearMessage();\n        }\n        //eslint-disable-next-line\n    }, [error, isAuthenticated, props.history]);\n    \n    const [user, setUser] = useState({\n        username: '',\n        password: '',\n    })\n    const { username, password } = user;\n    \n    const onChange = e => {\n        setUser({ ...user, [e.target.name]: e.target.value });\n    }\n\n    const onSubmit = e => {\n        e.preventDefault();\n        if(username === '' || password === ''){\n            setAlert('All the fields need to be filled', 'danger');\n        }\n        else{\n           login({\n               username,\n               password\n           });\n        }\n    }\n\n    return (\n        <div className='form-container'>\n            <h1>\n               <span className='text-primary'> Login </span>\n            </h1>\n            <form onSubmit={onSubmit}>\n                <div className=\"form-group\">\n                    <label htmlFor=\"username\">Username: </label>\n                    <input type='text' name='username' value={username} onChange={onChange} />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"password\">Password: </label>\n                    <input type='password' name='password' value={password} onChange={onChange} />\n                </div>\n                <input type=\"submit\" value=\"Login\" className=\"btn btn-primary btn-block\" />\n            </form>\n            Don't have an account? <Link to='Register'>Register</Link>\n        </div>\n    )\n}\n\nexport default Login;\n\n"]},"metadata":{},"sourceType":"module"}