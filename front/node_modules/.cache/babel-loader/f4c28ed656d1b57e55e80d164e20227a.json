{"ast":null,"code":"var _jsxFileName = \"/Users/lpan/Desktop/Matcha/front/src/contexts/user/UserState.js\";\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport UserContext from './userContext';\nimport UserReducer from './userReducer';\nimport setAuthToken from '../../utils/setAuthToken';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, CLEAR_MESSAGE, LOGIN_SUCCESS, LOGIN_FAIL, LOAD_USER, AUTH_ERROR, LOGOUT, EDIT_ACCOUNT_FAIL, EDIT_ACCOUNT_SUCCESS, NORMAL_ERROR } from '../types';\n\nconst UserState = props => {\n  const initialState = {\n    token: localStorage.getItem('token'),\n    user: null,\n    loading: true,\n    error: null,\n    success: null\n  };\n  const [state, dispatch] = useReducer(UserReducer, initialState);\n\n  const register = async formData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const result = await axios.post('/user/register', formData, config);\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: result.data.success\n      });\n    } catch (err) {\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: err.response.data.error\n      });\n    }\n  };\n\n  const login = async formData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const result = await axios.post('/user/login', formData, config);\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: result.data\n      });\n      loadUser();\n    } catch (err) {\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: err.response.data.error\n      });\n    }\n  };\n\n  const loadUser = async () => {\n    setAuthToken(localStorage.token);\n\n    try {\n      const result = await axios.get('/user/auth');\n      dispatch({\n        type: LOAD_USER,\n        payload: result.data\n      });\n    } catch (err) {\n      dispatch({\n        type: AUTH_ERROR\n      });\n    }\n  };\n\n  const logout = async () => {\n    setAuthToken(localStorage.token);\n\n    try {\n      const result = await axios.get('/user/logout');\n      dispatch({\n        type: LOGOUT,\n        payload: result.data.success\n      });\n    } catch (err) {\n      dispatch({\n        type: NORMAL_ERROR,\n        payload: err.response.data.error\n      });\n    }\n  };\n\n  const clearMessage = () => {\n    dispatch({\n      type: CLEAR_MESSAGE\n    });\n  };\n\n  const editAccount = async formData => {\n    setAuthToken(localStorage.token);\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const result = await axios.post('/user/modify/account', formData, config);\n      dispatch({\n        type: EDIT_ACCOUNT_SUCCESS,\n        payload: result.data.success\n      });\n      loadUser();\n    } catch (err) {\n      dispatch({\n        type: EDIT_ACCOUNT_FAIL,\n        payload: err.response.data.error\n      });\n    }\n  };\n\n  return React.createElement(UserContext.Provider, {\n    value: {\n      token: state.token,\n      loading: state.loading,\n      user: state.user,\n      error: state.error,\n      success: state.success,\n      register,\n      clearMessage,\n      login,\n      loadUser,\n      logout,\n      editAccount\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default UserState;","map":{"version":3,"sources":["/Users/lpan/Desktop/Matcha/front/src/contexts/user/UserState.js"],"names":["React","useReducer","axios","UserContext","UserReducer","setAuthToken","REGISTER_SUCCESS","REGISTER_FAIL","CLEAR_MESSAGE","LOGIN_SUCCESS","LOGIN_FAIL","LOAD_USER","AUTH_ERROR","LOGOUT","EDIT_ACCOUNT_FAIL","EDIT_ACCOUNT_SUCCESS","NORMAL_ERROR","UserState","props","initialState","token","localStorage","getItem","user","loading","error","success","state","dispatch","register","formData","config","headers","result","post","type","payload","data","err","response","login","loadUser","get","logout","clearMessage","editAccount","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport UserContext from './userContext';\nimport UserReducer from './userReducer';\nimport setAuthToken from '../../utils/setAuthToken';\n\nimport {\n   REGISTER_SUCCESS,\n   REGISTER_FAIL,\n   CLEAR_MESSAGE,\n   LOGIN_SUCCESS,\n   LOGIN_FAIL,\n   LOAD_USER,\n   AUTH_ERROR,\n   LOGOUT,\n   EDIT_ACCOUNT_FAIL,\n   EDIT_ACCOUNT_SUCCESS,\n   NORMAL_ERROR\n} from '../types';\n\nconst UserState = props => {\n    const initialState = {\n        token: localStorage.getItem('token'),\n        user: null,\n        loading: true,\n        error: null,\n        success: null,\n    }\n\n    const [state, dispatch] = useReducer(UserReducer, initialState);\n\n    const register = async formData =>{\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n        try{\n            const result =  await axios.post('/user/register', formData, config);\n            dispatch({\n                type: REGISTER_SUCCESS,\n                payload: result.data.success\n            });\n        }catch(err){\n            dispatch({\n                type: REGISTER_FAIL,\n                payload: err.response.data.error\n            });\n        }\n    }\n    \n    const login = async formData =>{\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n        try{\n            const result =  await axios.post('/user/login', formData, config);\n            dispatch({\n                type: LOGIN_SUCCESS,\n                payload: result.data\n            });\n            loadUser();\n        }catch(err){\n            dispatch({\n                type: LOGIN_FAIL,\n                payload: err.response.data.error\n            });\n        }\n    }\n\n    const loadUser = async () => {\n        setAuthToken(localStorage.token);\n        try {\n            const result = await axios.get('/user/auth');\n            dispatch({\n                type: LOAD_USER, \n                payload: result.data\n            })\n        } catch (err) {\n            dispatch({\n                type: AUTH_ERROR, \n            })\n        }\n    }\n    const logout = async () => {\n        setAuthToken(localStorage.token);\n        try {\n            const result = await axios.get('/user/logout');\n            dispatch({\n                type: LOGOUT, \n                payload: result.data.success\n            })\n        } catch (err) {\n            dispatch({\n                type: NORMAL_ERROR,\n                payload: err.response.data.error\n            })\n        }\n    }\n    const clearMessage = () => {\n        dispatch({\n            type: CLEAR_MESSAGE\n        })\n    }\n\n    const editAccount = async (formData) => {\n        setAuthToken(localStorage.token);\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n        try{\n            const result =  await axios.post('/user/modify/account', formData, config);\n            dispatch({\n                type: EDIT_ACCOUNT_SUCCESS,\n                payload: result.data.success\n            });\n            loadUser();\n        }catch(err){\n            dispatch({\n                type: EDIT_ACCOUNT_FAIL,\n                payload: err.response.data.error\n            });\n        }\n    }\n\n    return (\n        <UserContext.Provider\n            value={{\n                token: state.token,\n                loading: state.loading,\n                user: state.user,\n                error: state.error,\n                success: state.success,\n                register,\n                clearMessage,\n                login,\n                loadUser,\n                logout,\n                editAccount,\n            }}\n        >\n        {props.children}\n        </UserContext.Provider>\n    )\n}\n\nexport default UserState;"]},"metadata":{},"sourceType":"module"}