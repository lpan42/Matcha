{"ast":null,"code":"var _jsxFileName = \"/Users/lpan/Desktop/Matcha/front/src/components/profile/Profile.js\";\nimport React, { Fragment, useContext, useEffect } from 'react';\nimport AlertContext from '../../contexts/alert/alertContext';\nimport UserContext from '../../contexts/user/userContext';\nimport ProfileContext from '../../contexts/profile/profileContext';\n\nconst Profile = ({\n  match\n}) => {\n  const profileContext = useContext(ProfileContext);\n  const alertContext = useContext(AlertContext);\n  const userContext = useContext(UserContext);\n  const {\n    getProfile,\n    profile,\n    error,\n    success,\n    clearMessage\n  } = profileContext;\n  const {\n    setAlert\n  } = alertContext;\n  const {\n    loadUser,\n    user\n  } = userContext;\n  useEffect(() => {\n    loadUser();\n    getProfile(match.params.userid);\n\n    if (error) {\n      setAlert(error, 'danger');\n      clearMessage();\n    }\n\n    if (success) {\n      setAlert(success, 'success');\n      clearMessage();\n    } // eslint-disable-next-line\n\n  }, [error, success]);\n\n  const checkProfile = () => {\n    if (profile) {\n      console.log(profile);\n    }\n  }; // const renderProfile = (\n  //     <Fragment>\n  //         <p>{profile && profile.data.online ? \"online\" : (\"offline, last login: \"+ (profile && profile.data.last_login))}</p>\n  //         <p>Fame: {profile && profile.data.fame}</p>\n  //         <p>Fristname: {profile && profile.data.firstname}</p>\n  //         <p>Lastname: {profile && profile.data.lastname}</p>\n  //         <p>Birthday: {profile && profile.data.birthday}</p>\n  //         <p>Biography: {profile && profile.data.biography}</p>\n  //     </Fragment>\n  // )\n\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, checkProfile);\n};\n\nexport default Profile;","map":{"version":3,"sources":["/Users/lpan/Desktop/Matcha/front/src/components/profile/Profile.js"],"names":["React","Fragment","useContext","useEffect","AlertContext","UserContext","ProfileContext","Profile","match","profileContext","alertContext","userContext","getProfile","profile","error","success","clearMessage","setAlert","loadUser","user","params","userid","checkProfile","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAsD,OAAtD;AACA,OAAOC,YAAP,MAAyB,mCAAzB;AACA,OAAOC,WAAP,MAAwB,iCAAxB;AACA,OAAOC,cAAP,MAA2B,uCAA3B;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC3B,QAAOC,cAAc,GAAGP,UAAU,CAACI,cAAD,CAAlC;AACA,QAAOI,YAAY,GAAGR,UAAU,CAACE,YAAD,CAAhC;AACA,QAAOO,WAAW,GAAGT,UAAU,CAACG,WAAD,CAA/B;AAEA,QAAM;AAAEO,IAAAA,UAAF;AAAcC,IAAAA,OAAd;AAAuBC,IAAAA,KAAvB;AAA8BC,IAAAA,OAA9B;AAAuCC,IAAAA;AAAvC,MAAwDP,cAA9D;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAeP,YAArB;AACA,QAAM;AAAEQ,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAoBR,WAA1B;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACZe,IAAAA,QAAQ;AACRN,IAAAA,UAAU,CAACJ,KAAK,CAACY,MAAN,CAAaC,MAAd,CAAV;;AACA,QAAGP,KAAH,EAAU;AACNG,MAAAA,QAAQ,CAACH,KAAD,EAAQ,QAAR,CAAR;AACAE,MAAAA,YAAY;AACf;;AACD,QAAGD,OAAH,EAAY;AACRE,MAAAA,QAAQ,CAACF,OAAD,EAAU,SAAV,CAAR;AACAC,MAAAA,YAAY;AACf,KAVW,CAWZ;;AACH,GAZQ,EAYN,CAACF,KAAD,EAAQC,OAAR,CAZM,CAAT;;AAcA,QAAMO,YAAY,GAAG,MAAM;AACvB,QAAGT,OAAH,EAAW;AACPU,MAAAA,OAAO,CAACC,GAAR,CAAYX,OAAZ;AACH;AACJ,GAJD,CAvB2B,CA6B3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIS,YADJ,CADJ;AAKH,CA7CD;;AA+CA,eAAef,OAAf","sourcesContent":["import React, { Fragment, useContext, useEffect} from 'react'\nimport AlertContext from '../../contexts/alert/alertContext';\nimport UserContext from '../../contexts/user/userContext';\nimport ProfileContext from '../../contexts/profile/profileContext';\n\nconst Profile = ({ match }) => {\n    const  profileContext = useContext(ProfileContext);\n    const  alertContext = useContext(AlertContext);\n    const  userContext = useContext(UserContext);\n\n    const { getProfile, profile, error, success, clearMessage } = profileContext;\n    const { setAlert } = alertContext;\n    const { loadUser, user} = userContext;\n\n    useEffect(() => {\n        loadUser();\n        getProfile(match.params.userid);\n        if(error) {\n            setAlert(error, 'danger');\n            clearMessage();\n        }\n        if(success) {\n            setAlert(success, 'success');\n            clearMessage();\n        }\n        // eslint-disable-next-line\n    }, [error, success]);\n\n    const checkProfile = () => {\n        if(profile){\n            console.log(profile);\n        }\n    }\n\n    // const renderProfile = (\n    //     <Fragment>\n    //         <p>{profile && profile.data.online ? \"online\" : (\"offline, last login: \"+ (profile && profile.data.last_login))}</p>\n    //         <p>Fame: {profile && profile.data.fame}</p>\n    //         <p>Fristname: {profile && profile.data.firstname}</p>\n    //         <p>Lastname: {profile && profile.data.lastname}</p>\n    //         <p>Birthday: {profile && profile.data.birthday}</p>\n    //         <p>Biography: {profile && profile.data.biography}</p>\n    //     </Fragment>\n    // )\n    \n    return (\n        <div>\n           {checkProfile}\n        </div>\n    )\n}\n\nexport default Profile\n"]},"metadata":{},"sourceType":"module"}