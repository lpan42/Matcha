{"ast":null,"code":"var _jsxFileName = \"/Users/lpan/Desktop/Matcha/front/src/components/routing/PrivateRoute.js\";\n//race/\nimport React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport UserContext from '../../contexts/user/userContext';\n\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  const userContext = useContext(UserContext);\n  const {\n    token,\n    loading\n  } = userContext;\n  return React.createElement(Route, Object.assign({}, rest, {\n    render: props => !token && !loading ? React.createElement(Redirect, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }) : React.createElement(Component, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }));\n};\n\nexport default PrivateRoute;","map":{"version":3,"sources":["/Users/lpan/Desktop/Matcha/front/src/components/routing/PrivateRoute.js"],"names":["React","useContext","Route","Redirect","UserContext","PrivateRoute","component","Component","rest","userContext","token","loading","props"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,UAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,WAAP,MAAwB,iCAAxB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAuC;AACxD,QAAMC,WAAW,GAAGR,UAAU,CAACG,WAAD,CAA9B;AACA,QAAM;AAAEM,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAqBF,WAA3B;AAEA,SACI,oBAAC,KAAD,oBAAWD,IAAX;AACI,IAAA,MAAM,EAAGI,KAAK,IAAI,CAACF,KAAD,IAAU,CAACC,OAAX,GAAsB,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtB,GAAmD,oBAAC,SAAD,oBAAeC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAKH,CATD;;AAWA,eAAeP,YAAf","sourcesContent":["//race/\nimport React, { useContext }from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport UserContext from '../../contexts/user/userContext';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n    const userContext = useContext(UserContext);\n    const { token, loading } = userContext;\n\n    return (\n        <Route {...rest } \n            render={ props => !token && !loading ? (<Redirect to='/login' />) : (<Component {...props} />)} \n        />\n    )\n}\n\nexport default PrivateRoute\n"]},"metadata":{},"sourceType":"module"}