{"ast":null,"code":"var _jsxFileName = \"/Users/lpan/Desktop/Matcha/front/src/components/profile/Profile.js\";\nimport React, { Fragment, useContext, useEffect } from 'react';\nimport AlertContext from '../../contexts/alert/alertContext';\nimport UserContext from '../../contexts/user/userContext';\nimport ProfileContext from '../../contexts/profile/profileContext';\nimport Interests from './Interests';\n\nconst Profile = ({\n  match\n}) => {\n  const profileContext = useContext(ProfileContext);\n  const alertContext = useContext(AlertContext);\n  const userContext = useContext(UserContext);\n  const {\n    getProfile,\n    profile,\n    emptyProfile,\n    error,\n    success,\n    clearMessage\n  } = profileContext;\n  const {\n    setAlert\n  } = alertContext;\n  const {\n    loadUser,\n    user\n  } = userContext;\n  useEffect(() => {\n    loadUser();\n    getProfile(match.params.userid);\n\n    if (error) {\n      setAlert(error, 'danger');\n      clearMessage();\n    }\n\n    if (success) {\n      setAlert(success, 'success');\n      clearMessage();\n    } // eslint-disable-next-line\n\n  }, [error, success]);\n\n  const OnClick = () => {};\n\n  const RenderProfile = React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, profile && profile.data.online ? \"online\" : \"Offline, since: \" + (profile && profile.data.last_login)), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Fame: \", profile && profile.data.fame), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Fristname: \", profile && profile.data.firstname), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Lastname: \", profile && profile.data.lastname), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Birthday: \", profile && profile.data.birthday), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Biography: \", profile && profile.data.biography), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Interest: \", React.createElement(Interests, {\n    interests: profile && profile.data.interests,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })));\n  const NoProfile = React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, emptyProfile), match.params.userid == (user && user.data.id) ? React.createElement(\"button\", {\n    className: \"btn-primary btn-block\",\n    onClick: OnClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Create my Profile\") : null);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, !emptyProfile ? RenderProfile : NoProfile);\n};\n\nexport default Profile;","map":{"version":3,"sources":["/Users/lpan/Desktop/Matcha/front/src/components/profile/Profile.js"],"names":["React","Fragment","useContext","useEffect","AlertContext","UserContext","ProfileContext","Interests","Profile","match","profileContext","alertContext","userContext","getProfile","profile","emptyProfile","error","success","clearMessage","setAlert","loadUser","user","params","userid","OnClick","RenderProfile","data","online","last_login","fame","firstname","lastname","birthday","biography","interests","NoProfile","id"],"mappings":"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","sourcesContent":["import React, { Fragment, useContext, useEffect} from 'react'\nimport AlertContext from '../../contexts/alert/alertContext';\nimport UserContext from '../../contexts/user/userContext';\nimport ProfileContext from '../../contexts/profile/profileContext';\nimport Interests from './Interests';\n\nconst Profile = ({ match }) => {\n    const  profileContext = useContext(ProfileContext);\n    const  alertContext = useContext(AlertContext);\n    const  userContext = useContext(UserContext);\n\n    const { getProfile, profile, emptyProfile, error, success, clearMessage } = profileContext;\n    const { setAlert } = alertContext;\n    const { loadUser, user} = userContext;\n\n    useEffect(() => {\n        loadUser();\n        getProfile(match.params.userid);\n        if(error) {\n            setAlert(error, 'danger');\n            clearMessage();\n        }\n        if(success) {\n            setAlert(success, 'success');\n            clearMessage();\n        }\n        // eslint-disable-next-line\n    }, [error, success]);\n\n    const OnClick =()=>{\n        \n    }\n    const RenderProfile = (\n        <Fragment>\n            <p>{profile && profile.data.online ? \"online\" : (\"Offline, since: \" + (profile && profile.data.last_login))}</p>\n            <p>Fame: {profile && profile.data.fame}</p>\n            <p>Fristname: {profile && profile.data.firstname}</p>\n            <p>Lastname: {profile && profile.data.lastname}</p>\n            <p>Birthday: {profile && profile.data.birthday}</p>\n            <p>Biography: {profile && profile.data.biography}</p>\n            <p>Interest: <Interests interests ={profile && profile.data.interests} /></p>\n        </Fragment>\n    )\n    \n    const NoProfile = (\n        <Fragment>\n            <p>{emptyProfile}</p>\n            {match.params.userid == (user && user.data.id) ? <button className=\"btn-primary btn-block\" onClick={OnClick}>Create my Profile</button> : null}\n        </Fragment>\n    )\n\n    return (\n        <div>\n           { !emptyProfile ? RenderProfile: NoProfile }\n        </div>\n    )\n}\n\nexport default Profile\n"]},"metadata":{},"sourceType":"module"}