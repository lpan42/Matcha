{"ast":null,"code":"var _jsxFileName = \"/Users/lpan/Desktop/Matcha/front/src/contexts/auth/Authstate.js\";\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport AuthContext from './authContext';\nimport AuthReducer from './authReducer';\nimport setAuthToken from '../../utils/setAuthToken';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, CLEAR_MESSAGE, LOGIN_SUCCESS, LOGIN_FAIL, LOAD_USER, AUTH_ERROR, LOGOUT } from '../types';\n\nconst AuthState = props => {\n  const initialState = {\n    token: localStorage.getItem('token') // isAuthenticated: null,\n    // user: null,\n    // loading: true,\n    // error: null,\n    // success: null,\n\n  };\n  const [state, dispatch] = useReducer(AuthReducer, initialState);\n\n  const register = async formData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const result = await axios.post('/user/register', formData, config);\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: result.data.message\n      });\n    } catch (err) {\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: err.response.data.error\n      });\n    }\n  };\n\n  const login = async formData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const result = await axios.post('/user/login', formData, config);\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: result.data\n      });\n      loadUser();\n    } catch (err) {\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: err.response.data.error\n      });\n    }\n  };\n\n  const loadUser = async () => {\n    setAuthToken(localStorage.token);\n\n    try {\n      const result = await axios.get('/user/auth');\n      dispatch({\n        type: LOAD_USER,\n        payload: result.data\n      });\n    } catch (err) {\n      dispatch({\n        type: AUTH_ERROR // payload: err.response.data.error\n\n      });\n    }\n  };\n\n  const logout = () => {\n    dispatch({\n      type: LOGOUT\n    });\n  };\n\n  const clearMessage = () => {\n    dispatch({\n      type: CLEAR_MESSAGE\n    });\n  };\n\n  return React.createElement(AuthContext.Provider, {\n    value: {\n      token: state.token,\n      isAuthenticated: state.isAuthenticated,\n      loading: state.loading,\n      user: state.user,\n      error: state.error,\n      success: state.success,\n      register,\n      clearMessage,\n      login,\n      loadUser,\n      logout\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default AuthState;","map":{"version":3,"sources":["/Users/lpan/Desktop/Matcha/front/src/contexts/auth/Authstate.js"],"names":["React","useReducer","axios","AuthContext","AuthReducer","setAuthToken","REGISTER_SUCCESS","REGISTER_FAIL","CLEAR_MESSAGE","LOGIN_SUCCESS","LOGIN_FAIL","LOAD_USER","AUTH_ERROR","LOGOUT","AuthState","props","initialState","token","localStorage","getItem","state","dispatch","register","formData","config","headers","result","post","type","payload","data","message","err","response","error","login","loadUser","get","logout","clearMessage","isAuthenticated","loading","user","success","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport AuthContext from './authContext';\nimport AuthReducer from './authReducer';\nimport setAuthToken from '../../utils/setAuthToken';\n\nimport {\n   REGISTER_SUCCESS,\n   REGISTER_FAIL,\n   CLEAR_MESSAGE,\n   LOGIN_SUCCESS,\n   LOGIN_FAIL,\n   LOAD_USER,\n   AUTH_ERROR,\n   LOGOUT\n} from '../types';\n\nconst AuthState = props => {\n    const initialState = {\n        token: localStorage.getItem('token'),\n        // isAuthenticated: null,\n        // user: null,\n        // loading: true,\n        // error: null,\n        // success: null,\n    }\n\n    const [state, dispatch] = useReducer(AuthReducer, initialState);\n\n    const register = async formData =>{\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n        try{\n            const result =  await axios.post('/user/register', formData, config);\n            dispatch({\n                type: REGISTER_SUCCESS,\n                payload: result.data.message\n            });\n        }catch(err){\n            dispatch({\n                type: REGISTER_FAIL,\n                payload: err.response.data.error\n            });\n        }\n    }\n    \n    const login = async formData =>{\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n        try{\n            const result =  await axios.post('/user/login', formData, config);\n            dispatch({\n                type: LOGIN_SUCCESS,\n                payload: result.data\n            });\n            loadUser();\n        }catch(err){\n            dispatch({\n                type: LOGIN_FAIL,\n                payload: err.response.data.error\n            });\n        }\n    }\n\n    const loadUser = async () => {\n        setAuthToken(localStorage.token);\n        try {\n            const result = await axios.get('/user/auth');\n            dispatch({\n                type: LOAD_USER, \n                payload: result.data\n            })\n        } catch (err) {\n            dispatch({\n                type: AUTH_ERROR, \n                // payload: err.response.data.error\n            })\n        }\n    }\n    const logout = () => {\n        dispatch({\n            type: LOGOUT, \n        })\n    }\n    const clearMessage = () => {\n        dispatch({\n            type: CLEAR_MESSAGE\n        })\n    }\n    return (\n        <AuthContext.Provider\n            value={{\n                token: state.token,\n                isAuthenticated: state.isAuthenticated,\n                loading: state.loading,\n                user: state.user,\n                error: state.error,\n                success: state.success,\n                register,\n                clearMessage,\n                login,\n                loadUser,\n                logout,\n            }}\n        >\n        {props.children}\n        </AuthContext.Provider>\n    )\n}\n\nexport default AuthState;"]},"metadata":{},"sourceType":"module"}